buildscript 
{
    repositories 
	{
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies 
	{
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'

version = " ${mc_version} - ${mod_version} - ${version_type}#${getVersion()}"
group= "${package_group}"
archivesBaseName = "${mod_name} "

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

def getVersion()
{
    def versionPropsFile = file('version.properties')
	String modVersion = "${mod_version_id}"

    if (versionPropsFile.canRead()) 
	{
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

		def prop = versionProps['VERSION_CODE_' + modVersion]

		if(prop == null)
			prop = 0

        int code = prop.toInteger() + 1

        versionProps['VERSION_CODE_' + modVersion] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
		
		return String.format("%02d", code)
    }
    else 
	{
        throw new GradleException("Could not read version.properties!")
    }
}

minecraft 
{

    mappings channel: 'snapshot', version: '20191231-1.14.3'

    runs 
	{
        client 
		{
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods 
			{
                examplemod 
				{
                    source sourceSets.main
                }
            }
        }

        server 
		{
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods 
			{
                examplemod 
				{
                    source sourceSets.main
                }
            }
        }

        data 
		{
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods 
			{
                examplemod 
				{
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies 
{
    minecraft 'net.minecraftforge:forge:1.14.4-28.2.0'
}